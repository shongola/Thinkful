-- 1
SELECT *
FROM naep;

-- 2
SELECT * 
FROM naep
LIMIT 50;

-- 3
SELECT state,
    ROUND(AVG(avg_math_4_score), 2) AS stateavg_math_4_score,
    MAX(avg_math_4_score) AS max_math_4_score,
    MIN(avg_math_4_score) AS min_math_4_score,
    COUNT(avg_math_4_score) AS count_math_4_score
FROM naep
GROUP BY state
ORDER BY state ASC;

-- 4
WITH troubled_edu AS
(
	SELECT state,
		MAX(avg_math_4_score) - MIN(avg_math_4_score) as score_diff,
    		ROUND(AVG(avg_math_4_score), 2) AS stateavg_math_4_score,
    		MAX(avg_math_4_score) AS max_math_4_score,
    		MIN(avg_math_4_score) AS min_math_4_score,
    		COUNT(avg_math_4_score) AS count_math_4_score
	FROM naep
	GROUP BY state
	ORDER BY state ASC
)
SELECT state, stateavg_math_4_score, max_math_4_score, min_math_4_score, count_math_4_score
FROM troubled_edu
WHERE score_diff >30;

-- 5
SELECT state as bottom_10_states
FROM naep
WHERE year = '2000'
ORDER BY avg_math_4_score ASC
LIMIT 10;

-- 6
SELECT ROUND(AVG(avg_math_4_score), 2) as all_state_avg_2000
FROM naep
WHERE year = '2000'
GROUP BY year;

-- 7
SELECT state as below_average_states_y2000
FROM naep
WHERE year = '2000' AND avg_math_4_score < ALL
	(SELECT AVG(avg_math_4_score)
	 FROM naep
	 WHERE year = '2000');

-- 8
SELECT state as scores_missing_y2000
FROM naep
WHERE avg_math_4_score IS NULL AND year = '2000';

-- 9
SELECT naep.state, ROUND(avg_math_4_score, 2) as avg_math_4_score, total_expenditure
FROM naep LEFT OUTER JOIN finance
ON naep.id = finance.id
WHERE naep.year = '2000' AND avg_math_4_score IS NOT NULL
ORDER BY total_expenditure;
